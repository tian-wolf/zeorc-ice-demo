/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * User Manual available at https://docs.gradle.org/5.3.1/userguide/tutorial_java_projects.html
 */
plugins {
    // Apply the java plugin to add support for Java
    id 'application'
    id 'com.zeroc.gradle.ice-builder.slice' version '1.4.7' apply false
}

//
// Apply Java and Ice Builder plug-ins to all sub-projects
//
apply plugin: 'java'
apply plugin: 'com.zeroc.gradle.ice-builder.slice'

//
// Both Client and Server projects share the Printer.ice Slice definitions
//
slice {
    java {
        files = [file("Request.ice")]
    }
}

//
// Use Ice JAR files from maven central repository
//
repositories {
    mavenCentral()
}

tasks.withType(JavaCompile) {
    options.compilerArgs << "-Xlint:unchecked" << "-Xlint:-options"
    options.encoding = "UTF-8"
}

//
// Both Client and Server depend only on Ice JAR
//
dependencies {
    // https://mvnrepository.com/artifact/com.zeroc/ice
    compile group: 'com.zeroc', name: 'ice', version: '3.7.2',transitive:false
    // https://mvnrepository.com/artifact/log4j/log4j
    compile group: 'log4j', name: 'log4j', version: '1.2.17',transitive:false
    // https://mvnrepository.com/artifact/com.alibaba/fastjson
    compile group: 'com.alibaba', name: 'fastjson', version: '1.2.56',transitive:false
    // https://mvnrepository.com/artifact/com.google.code.gson/gson
    compile group: 'com.google.code.gson', name: 'gson', version: '2.8.5',transitive:false
    // https://mvnrepository.com/artifact/com.alibaba/druid
    compile group: 'com.alibaba', name: 'druid', version: '1.1.15',transitive:false
    // https://mvnrepository.com/artifact/mysql/mysql-connector-java
    compile group: 'mysql', name: 'mysql-connector-java', version: '8.0.15',transitive:false
    // https://mvnrepository.com/artifact/org.apache.commons/commons-lang3
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.8.1',transitive:false
    testImplementation 'junit:junit:4.12'
}

//
// Create a JAR file with the appropriate Main-Class and Class-Path attributes
//
mainClassName = 'com.tlwl.demo.ice.main.Server'
jar {
    jar {
        manifest {
            attributes(
                "Main-Class" : mainClassName,
                "Class-Path": configurations.runtime.resolve().collect { it.toURI() }.join(' ')
            )
        }
    }
}

